// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using epl.infrastructure;

namespace epl.infrastructure.Migrations
{
    [DbContext(typeof(CommitmentsContext))]
    [Migration("20181023200702_InitalCase")]
    partial class InitalCase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("epl.core.Domain.Commitment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("Frequency");

                    b.Property<string>("Name");

                    b.Property<string>("Performed");

                    b.HasKey("Id");

                    b.ToTable("Commitments");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Commitment");
                });

            modelBuilder.Entity("epl.core.Domain.DailyCommitment", b =>
                {
                    b.HasBaseType("epl.core.Domain.Commitment");


                    b.ToTable("DailyCommitment");

                    b.HasDiscriminator().HasValue("DailyCommitment");
                });

            modelBuilder.Entity("epl.core.Domain.MonthlyCommitment", b =>
                {
                    b.HasBaseType("epl.core.Domain.Commitment");


                    b.ToTable("MonthlyCommitment");

                    b.HasDiscriminator().HasValue("MonthlyCommitment");
                });

            modelBuilder.Entity("epl.core.Domain.WeeklyCommitment", b =>
                {
                    b.HasBaseType("epl.core.Domain.Commitment");


                    b.ToTable("WeeklyCommitment");

                    b.HasDiscriminator().HasValue("WeeklyCommitment");
                });

            modelBuilder.Entity("epl.core.Domain.YearlyCommitment", b =>
                {
                    b.HasBaseType("epl.core.Domain.Commitment");


                    b.ToTable("YearlyCommitment");

                    b.HasDiscriminator().HasValue("YearlyCommitment");
                });
#pragma warning restore 612, 618
        }
    }
}
